{"version":3,"sources":["components/order/Orders.jsx","functions/admin.js","pages/admin/AdminDashboard.jsx","components/nav/AdminNav.jsx","../node_modules/@ant-design/icons-svg/es/asn/CheckCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckCircleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/CloseCircleOutlined.js","../node_modules/@ant-design/icons/es/icons/CloseCircleOutlined.js","components/cards/ShowPaymentInfo.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["Orders","orders","handleStatusChange","map","order","className","ShowPaymentInfo","showStatus","name","defaultValue","orderStatus","onChange","e","_id","target","value","scope","products","i","product","color","count","title","price","brand","shipping","CheckCircleOutlined","style","CloseCircleOutlined","getOrders","authtoken","a","axios","get","process","headers","changeStatus","orderId","put","AdminDashboard","useState","setOrders","user","useSelector","state","loadOrders","useCallback","token","then","res","data","useEffect","AdminNav","toast","success","catch","err","error","to","props","ref","React","AntdIcon","Object","assign","icon","CheckCircleOutlinedSvg","displayName","CloseCircleOutlinedSvg","paymentIntent","id","amount","toLocaleString","currency","toUpperCase","payment_method_types","status","Date","created","_slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","unsupportedIterableToArray","TypeError"],"mappings":"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","file":"static/js/29.43ae9e27.chunk.js","sourcesContent":["import { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons'\nimport React from 'react'\nimport ShowPaymentInfo from '../cards/ShowPaymentInfo'\n\nfunction Orders({ orders, handleStatusChange }) {\n    return (\n        <>\n            {orders.map(order =>\n                <div key={order._id} className=\"row pb-5\">\n                    <div className='btn btn-block bg-light'>\n                        <ShowPaymentInfo order={order} showStatus={false} />\n                        <div className=\"row\">\n                            <div className=\"col-md-4 fw-bold\">Delivery Status</div>\n                            <div className=\"col-md-8\">\n                                <select\n                                    className='form-control'\n                                    name='status'\n                                    defaultValue={order.orderStatus}\n                                    onChange={e => handleStatusChange(order._id, e.target.value)}>\n                                    <option value=\"Not Processed\">Not Processed</option>\n                                    <option value=\"Processing\">Processing</option>\n                                    <option value=\"Dispatched\">Dispatched</option>\n                                    <option value=\"Cancelled\">Cancelled</option>\n                                    <option value=\"Completed\">Completed</option>\n                                </select>\n                            </div>\n                        </div>\n        \n                            <table className='table table-bordered mt-3'>\n                                <thead className='thead-light'>\n                                    <tr>\n                                        <th scope='col'>Title</th>\n                                        <th scope='col'>Price</th>\n                                        <th scope='col'>Brand</th>\n                                        <th scope='col'>Color</th>\n                                        <th scope='col'>Count</th>\n                                        <th scope='col'>Shipping</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {order.products.map(({ product, color, count }, i) => (\n                                        <tr key={i}>\n                                            <td>{product.title}</td>\n                                            <td>{product.price}</td>\n                                            <td>{product.brand}</td>\n                                            <td>{color}</td>\n                                            <td>{count}</td>\n                                            <td>{product.shipping === 'Yes' ? <CheckCircleOutlined style={{ color: 'green' }} /> : <CloseCircleOutlined style={{ color: 'red' }} />}</td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </table>\n             \n                    </div>\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default Orders\n","import axios from \"axios\";\n\nexport const getOrders = async (authtoken) => {\n    return await axios.get(`${process.env.REACT_APP_API}/admin/orders`, {\n        headers: { authtoken }\n    })\n};\n\nexport const changeStatus = async (orderId, orderStatus, authtoken) => {\n    return await axios.put(`${process.env.REACT_APP_API}/admin/order-status`,\n        { orderId, orderStatus },\n        {\n            headers: { authtoken }\n        })\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport AdminNav from \"../../components/nav/AdminNav\";\nimport Orders from \"../../components/order/Orders\";\nimport { changeStatus, getOrders } from \"../../functions/admin\";\n\nconst AdminDashboard = () => {\n    const [orders, setOrders] = useState([]);\n    const user = useSelector(state => state.user);\n\n    const loadOrders = useCallback(() => {\n        getOrders(user.token).then(res => setOrders(res.data))\n    });\n\n    useEffect(() => {\n        loadOrders();\n    }, []);\n\n    const handleStatusChange = (orderId, orderStatus) => {\n        changeStatus(orderId, orderStatus, user.token)\n            .then(res => {\n                toast.success('Status updated');\n                loadOrders()\n            })\n            .catch(err => toast.error(err));\n    }\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <AdminNav />\n                </div>\n\n                <div className=\"col-md-10\">\n                    <h4>Admin Dashboard</h4>\n                    <Orders orders={orders} handleStatusChange={handleStatusChange} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default AdminDashboard;\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst AdminNav = () => {\n    return (\n        <nav>\n            <ul className=\"nav flex-column\">\n                <li className=\"nav-item\">\n                    <Link to=\"/admin/dashboard\" className=\"nav-link\">Dashboard</Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link to=\"/admin/product\" className=\"nav-link\">Product</Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link to=\"/admin/products\" className=\"nav-link\">Products</Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link to=\"/admin/category\" className=\"nav-link\">Category</Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link to=\"/admin/sub\" className=\"nav-link\">Sub category</Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link to=\"/admin/coupon\" className=\"nav-link\">Coupon</Link>\n                </li>\n                \n                <li className=\"nav-item\">\n                    <Link to=\"/admin/password\" className=\"nav-link\">Password</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default AdminNav\n","// This icon file is generated automatically.\nvar CheckCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"check-circle\", \"theme\": \"outlined\" };\nexport default CheckCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CheckCircleOutlined = function CheckCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CheckCircleOutlinedSvg\n  }));\n};\n\nCheckCircleOutlined.displayName = 'CheckCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckCircleOutlined);","// This icon file is generated automatically.\nvar CloseCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M685.4 354.8c0-4.4-3.6-8-8-8l-66 .3L512 465.6l-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155L340.5 670a8.32 8.32 0 00-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3L512 564.4l99.3 118.4 66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.5 515l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 65C264.6 65 64 265.6 64 513s200.6 448 448 448 448-200.6 448-448S759.4 65 512 65zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"close-circle\", \"theme\": \"outlined\" };\nexport default CloseCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseCircleOutlined = function CloseCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CloseCircleOutlinedSvg\n  }));\n};\n\nCloseCircleOutlined.displayName = 'CloseCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseCircleOutlined);","import React from 'react'\n\nfunction ShowPaymentInfo({ order, showStatus = true }) {\n    return (\n        <div>\n            <p>\n                <span>Order Id: {order.paymentIntent.id}</span>{\" / \"}\n                <span>Amount: {(order.paymentIntent.amount / 100).toLocaleString('en-US', { style: 'currency', currency: \"EUR\" })}</span>{\" \"}\n                <span>Currency: {order.paymentIntent.currency.toUpperCase()}</span>{\" / \"}\n                <span>Method: {order.paymentIntent.payment_method_types[0]}</span>{\" / \"}\n                <span>Payment: {order.paymentIntent.status.toUpperCase()}</span>{\" / \"}<br />\n                <span>Ordered on: {new Date(order.paymentIntent.created * 1000).toLocaleString()}</span>{\" / \"}\n                <br />\n                {showStatus && <span className='badge bg-primary text-white'>STATUS: {order.orderStatus}</span>}\n            </p>\n        </div>\n    )\n}\n\nexport default ShowPaymentInfo\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}
{"version":3,"sources":["components/order/Invoice.jsx","pages/user/History.jsx","functions/user.js","components/nav/UserNav.jsx","components/cards/ShowPaymentInfo.jsx"],"names":["styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","title","fontSize","textAlign","author","marginBottom","subtitle","margin","text","image","marginVertical","marginHorizontal","header","color","footer","padding","pageNumber","position","bottom","left","right","Invoice","order","style","fixed","Date","toLocaleString","data","products","getContent","x","product","price","count","brand","paymentIntent","created","id","orderStatus","amount","currency","History","useState","orders","setOrders","user","useSelector","state","useEffect","getUserOrders","token","then","res","catch","err","showOrderInTable","className","scope","map","i","shipping","CheckCircleOutlined","CloseCircleOutlined","downloadLink","document","fileName","UserNav","length","ShowPaymentInfo","userCart","cart","authtoken","a","axios","post","process","headers","getUserCart","get","emptyUserCart","delete","saveUserAddress","address","applyCoupon","coupon","name","createOrder","stripeResponse","getWishlist","addToWishlist","productId","removeWishlist","to","showStatus","toUpperCase","payment_method_types","status"],"mappings":"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","file":"static/js/19.d63bc8e3.chunk.js","sourcesContent":["import React from 'react'\nimport { Document, Page, StyleSheet, Text } from '@react-pdf/renderer';\nimport { Table, TableHeader, TableCell, DataTableCell, TableBody } from \"@david.kucsai/react-pdf-table\";\n\nconst styles = StyleSheet.create({\n    body: {\n        paddingTop: 35,\n        paddingBottom: 65,\n        paddingHorizontal: 35,\n    },\n    title: {\n        fontSize: 24,\n        textAlign: \"center\",\n    },\n    author: {\n        fontSize: 12,\n        textAlign: \"center\",\n        marginBottom: 40,\n    },\n    subtitle: {\n        fontSize: 18,\n        margin: 12,\n    },\n    text: {\n        margin: 12,\n        fontSize: 14,\n        textAlign: \"justify\",\n    },\n    image: {\n        marginVertical: 15,\n        marginHorizontal: 100,\n    },\n    header: {\n        fontSize: 12,\n        marginBottom: 20,\n        textAlign: \"center\",\n        color: \"grey\",\n    },\n    footer: {\n        padding: \"100px\",\n        fontSize: 12,\n        marginBottom: 20,\n        textAlign: \"center\",\n        color: \"grey\",\n    },\n    pageNumber: {\n        position: \"absolute\",\n        fontSize: 12,\n        bottom: 30,\n        left: 0,\n        right: 0,\n        textAlign: \"center\",\n        color: \"grey\",\n    },\n});\n\nfunction Invoice({ order }) {\n\n    return (\n        <Document>\n            <Page style={styles.body}>\n                <Text style={styles.header} fixed>\n                    {\" \"} ----- {new Date().toLocaleString()} ----- {\" \"}\n                </Text>\n                <Text style={styles.title}>Order Invoice</Text>\n                <Text style={styles.author}>Order Redux E-commerce</Text>\n                <Text style={styles.subtitle}>Order Summary</Text>\n\n                <Table>\n                    <TableHeader>\n                        <TableCell>Title</TableCell>\n                        <TableCell>Price</TableCell>\n                        <TableCell>Quantity</TableCell>\n                        <TableCell>Brand</TableCell>\n                        <TableCell>Color</TableCell>\n                    </TableHeader>\n                </Table>\n\n                <Table data={order.products}>\n                    <TableBody>\n                        <DataTableCell getContent={x => x.product.title} />\n                        <DataTableCell getContent={x => `$${x.product.price}`} />\n                        <DataTableCell getContent={x => x.count} />\n                        <DataTableCell getContent={x => x.product.brand} />\n                        <DataTableCell getContent={x => x.product.color} />\n                    </TableBody>\n                </Table>\n                    <Text  style={styles.text}>Date: {new Date(order.paymentIntent.created * 1000).toLocaleString()}</Text>\n                    <Text  style={styles.text}>Order Id: {order.paymentIntent.id}</Text>\n                    <Text  style={styles.text}>Order status: {order.orderStatus}</Text>\n                    <Text  style={styles.text}>Total Paid: {(order.paymentIntent.amount / 100).toLocaleString('en-US', { style: 'currency', currency: \"EUR\" })}</Text>\n\n                <Text style={styles.footer}>Thank you for shopping with us</Text>\n            </Page>\n        </Document>\n\n    )\n}\n\nexport default Invoice\n","import { CheckCircleOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport ShowPaymentInfo from '../../components/cards/ShowPaymentInfo';\nimport UserNav from '../../components/nav/UserNav';\nimport { getUserOrders } from '../../functions/user';\nimport { PDFDownloadLink } from '@react-pdf/renderer';\nimport Invoice from '../../components/order/Invoice';\n\nconst History = () => {\n    const [orders, setOrders] = useState([]);\n    const user = useSelector(state => state.user);\n\n    useEffect(() => {\n        getUserOrders(user.token)\n            .then(res => {\n                setOrders(res.data)\n            })\n            .catch(err => {\n\n            })\n    }, []);\n\n    const showOrderInTable = (order) => (\n        <table className='table table-bordered'>\n            <thead className='thead-light'>\n                <tr>\n                    <th scope='col'>Title</th>\n                    <th scope='col'>Price</th>\n                    <th scope='col'>Brand</th>\n                    <th scope='col'>Color</th>\n                    <th scope='col'>Count</th>\n                    <th scope='col'>Shipping</th>\n                </tr>\n            </thead>\n            <tbody>\n                {order.products.map(({ product, color, count }, i) => (\n                    <tr key={i}>\n                        <td>{product.title}</td>\n                        <td>{product.price}</td>\n                        <td>{product.brand}</td>\n                        <td>{color}</td>\n                        <td>{count}</td>\n                        <td>{product.shipping === 'Yes' ? <CheckCircleOutlined style={{ color: 'green' }} /> : <CloseCircleOutlined style={{ color: 'red' }} />}</td>\n                    </tr>\n                ))}\n            </tbody>\n        </table>\n    )\n\n    const showEachOrder = () =>\n        orders.map((order, i) =>\n            <div key={i} className='m-5 p-3 card'>\n                <ShowPaymentInfo order={order} />\n                {showOrderInTable(order)}\n                <div className=\"row\">\n                    <div className='col'>\n                        {downloadLink(order)}\n                    </div>\n                </div>\n            </div>\n        )\n\n    const downloadLink = (order) => (\n        <PDFDownloadLink\n            document={<Invoice order={order} />}\n            fileName='invoice.pdf'\n            className='btn btn-sm btn-block btn-outline-primary'\n        >\n            Download PDF\n        </PDFDownloadLink>\n    )\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <UserNav />\n                </div>\n                <div className=\"col text-center \">\n                    <h4>{orders.length > 0 ? 'User purchase orders' : 'No purchase order'}</h4>\n                    {showEachOrder()}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default History\n","import axios from \"axios\";\n\nexport const userCart = async (cart, authtoken) => {\n    return await axios.post(`${process.env.REACT_APP_API}/user/cart`,\n        { cart },\n        { headers: { authtoken } })\n};\n\nexport const getUserCart = async (authtoken) => {\n    return await axios.get(`${process.env.REACT_APP_API}/user/cart`,\n        { headers: { authtoken } })\n};\n\nexport const emptyUserCart = async (authtoken) => {\n    return await axios.delete(`${process.env.REACT_APP_API}/user/cart`,\n        { headers: { authtoken } })\n};\n\nexport const saveUserAddress = async (authtoken, address) => {\n    return await axios.post(`${process.env.REACT_APP_API}/user/address`,\n        { address },\n        { headers: { authtoken } })\n};\n\nexport const applyCoupon = async (coupon, authtoken) => {\n    return await axios.post(`${process.env.REACT_APP_API}/user/cart/coupon`,\n        { name: coupon },\n        {\n            headers: { authtoken }\n        })\n};\n\nexport const createOrder = async (stripeResponse, authtoken) => {\n    return await axios.post(`${process.env.REACT_APP_API}/user/order`,\n        { stripeResponse },\n        {\n            headers: { authtoken }\n        })\n};\n\nexport const getUserOrders = async (authtoken) => {\n    return await axios.get(`${process.env.REACT_APP_API}/user/order`,\n        {\n            headers: { authtoken }\n        })\n};\n\nexport const getWishlist = async (authtoken) => {\n    return await axios.get(`${process.env.REACT_APP_API}/user/wishlist`,\n        {\n            headers: { authtoken }\n        })\n};\n\nexport const addToWishlist = async (productId, authtoken) => {\n    return await axios.post(`${process.env.REACT_APP_API}/user/wishlist`,\n        { productId },\n        {\n            headers: { authtoken }\n        })\n};\n\nexport const removeWishlist = async (productId, authtoken) => {\n    return await axios.post(`${process.env.REACT_APP_API}/user/wishlist/${productId}`, \n    {},\n    {\n        headers: { authtoken }\n    })\n};","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst UserNav = () => {\n    return (\n        <nav>\n            <ul className=\"nav flex-column\">\n                <li className=\"nav-item\">\n                    <Link to=\"/user/history\" className=\"nav-link\">History</Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link to=\"/user/password\" className=\"nav-link\">Password</Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link to=\"/user/wishlist\" className=\"nav-link\">Wishlist</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default UserNav\n","import React from 'react'\n\nfunction ShowPaymentInfo({ order, showStatus = true }) {\n    return (\n        <div>\n            <p>\n                <span>Order Id: {order.paymentIntent.id}</span>{\" / \"}\n                <span>Amount: {(order.paymentIntent.amount / 100).toLocaleString('en-US', { style: 'currency', currency: \"EUR\" })}</span>{\" \"}\n                <span>Currency: {order.paymentIntent.currency.toUpperCase()}</span>{\" / \"}\n                <span>Method: {order.paymentIntent.payment_method_types[0]}</span>{\" / \"}\n                <span>Payment: {order.paymentIntent.status.toUpperCase()}</span>{\" / \"}<br />\n                <span>Ordered on: {new Date(order.paymentIntent.created * 1000).toLocaleString()}</span>{\" / \"}\n                <br />\n                {showStatus && <span className='badge bg-primary text-white'>STATUS: {order.orderStatus}</span>}\n            </p>\n        </div>\n    )\n}\n\nexport default ShowPaymentInfo\n"],"sourceRoot":""}
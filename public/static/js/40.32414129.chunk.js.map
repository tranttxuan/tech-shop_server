{"version":3,"sources":["functions/coupon.js","pages/admin/coupon/CreateCoupon.jsx","components/nav/AdminNav.jsx"],"names":["getCoupon","a","axios","get","process","removeCoupon","couponId","authtoken","delete","headers","createCoupon","coupon","post","CreateCoupon","useState","name","setName","expiry","setExpiry","discount","setDiscount","loading","setLoading","nameError","setNameError","coupons","setCoupons","user","useSelector","state","getAllCoupons","useDispatch","useCallback","then","data","catch","err","toast","error","message","useEffect","className","AdminNav","LoadingOutlined","onSubmit","e","preventDefault","token","response","success","type","value","onChange","target","toUpperCase","length","required","autoFocus","min","max","date","scope","map","c","Date","toLocaleDateString","DeleteOutlined","onClick","_id","window","confirm","res","info","style","cursor","to"],"mappings":"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","file":"static/js/40.32414129.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const getCoupon = async () => {\n    return await axios.get(`${process.env.REACT_APP_API}/coupons`)\n};\n\nexport const removeCoupon = async (couponId, authtoken) => {\n    return await axios.delete(`${process.env.REACT_APP_API}/coupon/${couponId}`, {\n        headers: { authtoken }\n    })\n};\n\nexport const createCoupon = async (coupon, authtoken) => {\n    return await axios.post(`${process.env.REACT_APP_API}/coupon`,\n        coupon,\n        {\n            headers: { authtoken }\n        })\n};","import React, { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport DatePicker from 'react-date-picker';\nimport 'react-date-picker/dist/DatePicker.css';\nimport AdminNav from '../../../components/nav/AdminNav';\nimport { createCoupon, getCoupon, removeCoupon } from '../../../functions/coupon'\nimport { toast } from 'react-toastify';\nimport { DeleteOutlined, LoadingOutlined } from '@ant-design/icons';\n\n\nfunction CreateCoupon() {\n    const [name, setName] = useState('');\n    const [expiry, setExpiry] = useState('');\n    const [discount, setDiscount] = useState('');\n    const [loading, setLoading] = useState('');\n    const [nameError, setNameError] = useState('');\n    const [coupons, setCoupons] = useState([])\n\n    const user = useSelector(state => state.user);\n    const dispatch = useDispatch();\n\n    const getAllCoupons = useCallback(\n        () => {\n            getCoupon()\n                .then(coupons => setCoupons(coupons.data))\n                .catch(err => toast.error(err.message))\n        },\n        [],\n    )\n\n    const handleChangeName = (e) => {\n        let name = e.target.value;\n        setName(name.toUpperCase());\n        if (name.length < 6) {\n            setNameError('Name is too short. Coupon has at least 6 characters and its maximum length is 12 characters');\n        } else if (name.length > 12) {\n            setNameError('Name is too long.  Coupon has at least 6 characters and its maximum length is 12 characters');\n        } else {\n            setNameError('');\n        }\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        if (!nameError) {\n            createCoupon({ name, expiry, discount }, user.token)\n                .then(response => {\n                    setLoading(false);\n                    getAllCoupons();\n                    setName('');\n                    setDiscount('');\n                    setExpiry('');\n                    toast.success(`Coupon ${response.data.name} is created`)\n                })\n                .catch(err => toast.error(err.message))\n        };\n    }\n\n    const handleRemoveCoupon = (couponId) => {\n        if (window.confirm('Delete?')) {\n            setLoading(true)\n            removeCoupon(couponId, user.token)\n                .then(res => {\n                    getAllCoupons();\n                    setLoading(false);\n                    toast.info(`Coupon ${res.data.name} is deleted`)\n                })\n                .catch(err => toast.error(err.message))\n        }\n    }\n\n    useEffect(() => {\n        getAllCoupons()\n    }, []);\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-md-2\">\n                    <AdminNav />\n                </div>\n                <div className=\"col\">\n                    {loading\n                        ? <h4 className='text-danger'><LoadingOutlined />Loading...</h4>\n                        : <h4>Coupon</h4>\n                    }\n\n                    <form onSubmit={handleSubmit}>\n                        <div className='form-group'>\n                            <label className='text-muted'>Name</label>\n                            <input\n                                type='text'\n                                className='form-control'\n                                value={name}\n                                name='name'\n                                onChange={handleChangeName}\n                                required\n                                autoFocus />\n                            {nameError && <p>{nameError}</p>}\n                        </div>\n                        <div className='form-group'>\n                            <label className='text-muted'>Discount %</label>\n                            <input\n                                min='0'\n                                max='100'\n                                type='number'\n                                className='form-control'\n                                value={discount}\n                                onChange={(e) => setDiscount(e.target.value)}\n                                required\n                                autoFocus />\n                        </div>\n                        <div className='form-group'>\n                            <label className='text-muted'>Expiry</label>\n                            <br />\n                            <DatePicker\n                                value={expiry}\n                                onChange={date => setExpiry(date)}\n                                required\n                            />\n                        </div>\n                        <button className='btn btn-primary'>Save</button>\n                    </form>\n                    <br />\n                    <h4>{coupons.length} Coupon{coupons.length < 2 ? '' : 's'}</h4>\n                    <table className='table table-bordered'>\n                        <thead className='thead-light'>\n                            <tr>\n                                <th scope='col'>Name</th>\n                                <th scope='col'>Expiry</th>\n                                <th scope='col'>Discount</th>\n                                <th scope='col'>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {coupons.map(c =>\n                                <tr key={c._id}>\n                                    <td>{c.name}</td>\n                                    <td>{new Date(c.expiry).toLocaleDateString()}</td>\n                                    <td>{c.discount}%</td>\n                                    <td >\n                                        <DeleteOutlined\n                                            onClick={() => handleRemoveCoupon(c._id)}\n                                            className='text-danger'\n                                            style={{ cursor: 'pointer' }} />\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n\n                    </table>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CreateCoupon\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst AdminNav = () => {\n    return (\n        <nav>\n            <ul className=\"nav flex-column\">\n                <li className=\"nav-item\">\n                    <Link to=\"/admin/dashboard\" className=\"nav-link\">Dashboard</Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link to=\"/admin/product\" className=\"nav-link\">Product</Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link to=\"/admin/products\" className=\"nav-link\">Products</Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link to=\"/admin/category\" className=\"nav-link\">Category</Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link to=\"/admin/sub\" className=\"nav-link\">Sub category</Link>\n                </li>\n\n                <li className=\"nav-item\">\n                    <Link to=\"/admin/coupon\" className=\"nav-link\">Coupon</Link>\n                </li>\n                \n                <li className=\"nav-item\">\n                    <Link to=\"/admin/password\" className=\"nav-link\">Password</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n}\n\nexport default AdminNav\n"],"sourceRoot":""}